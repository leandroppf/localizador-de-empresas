{"version":3,"sources":["services/api.ts","utils/validateCnpj.ts","context/Context.tsx","components/Card/index.tsx","assets/people_search.svg","pages/Home/index.tsx","components/Map/index.tsx","components/MapCard/index.tsx","pages/MapLocation/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["receitaWsApi","axios","create","baseURL","googleGeocodeApi","validateCnpj","cnpjValue","a","Error","schemaNumber","Yup","isValid","schema","shape","cnpj","min","validate","abortEarly","Context","createContext","ContextProvider","children","useState","company","setCompany","setSelectedCompany","useCallback","selectedCompany","console","log","Provider","value","nome","logradouro","municipio","coordinate","coordinates","Card","useContext","history","useHistory","selectCompany","push","type","className","onClick","data-testid","numero","bairro","Home","setCnpjValue","cnpjValidationError","setCnpjValidationError","companies","setCompanies","companiesList","localStorage","getItem","useEffect","listOfCompanies","JSON","parse","setCompanyLocalStorage","newCompany","find","companyObject","get","params","address","uf","cep","responseGeocode","data","results","geometry","location","setItem","stringify","handleSearchCompany","responseCompany","message","placeholder","onChange","e","currentTarget","maxLength","length","additionalTransfrom","arrows","autoPlaySpeed","centerMode","containerClass","dotListClass","draggable","focusOnSelect","infinite","itemClass","keyBoardControl","minimumTouchDrag","renderButtonGroupOutside","renderDotsOutside","responsive","desktop","breakpoint","max","items","partialVisibilityGutter","mobile","tablet","showDots","sliderClass","slidesToSlide","swipeable","map","companyDetails","src","peopleSearch","alt","Map","lat","lng","coodinates","google","maps","LatLng","document","getElementById","zoom","center","Marker","position","id","MapCard","to","MapLocation","Routes","path","exact","component","App","basename","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6a3fdbd3.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const receitaWsApi = axios.create({\n  baseURL:\n    'https://cors-anywhere.herokuapp.com/https://www.receitaws.com.br/v1/',\n});\n\nexport const googleGeocodeApi = axios.create({\n  baseURL:\n    'https://maps.googleapis.com/maps/api/geocode/json?key=AIzaSyBD8seg0kqV2xcg-GfTobUr0i-v-kgA5Qc',\n});\n","import * as Yup from 'yup';\nimport { cnpj } from 'cpf-cnpj-validator';\n\nexport async function validateCnpj(cnpjValue: string): Promise<Boolean> {\n  if (!cnpjValue) {\n    throw new Error('Insira um valor para pesquisar');\n  }\n\n  const schemaNumber = Yup.number();\n\n  const cnpjIsNumber = await schemaNumber.isValid(cnpjValue);\n\n  if (!cnpjIsNumber) {\n    throw new Error('Digite apenas números para buscar o CNPJ');\n  }\n\n  const schema = Yup.object().shape({\n    cnpj: Yup.string().min(14, 'Um CNPJ precisa conter 14 dígitos'),\n  });\n\n  await schema.validate({ cnpj: cnpjValue }, { abortEarly: false });\n\n  if (!cnpj.isValid(cnpjValue)) {\n    throw new Error('CNPJ inválido');\n  }\n\n  return true;\n}\n","import React, { createContext, useCallback, useState } from 'react';\n\nimport { ICompanyObject } from '../utils/interfacesData';\n\ninterface IContext {\n  nome: string;\n  cnpj: string;\n  logradouro: string;\n  municipio: string;\n  coordinate: {\n    lat: number;\n    lng: number;\n  };\n  setSelectedCompany(company: ICompanyObject): void;\n}\n\nexport const Context = createContext<IContext>({} as IContext);\n\nexport const ContextProvider: React.FC = ({ children }) => {\n  const [company, setCompany] = useState<ICompanyObject>({} as ICompanyObject);\n\n  const setSelectedCompany = useCallback(\n    (selectedCompany: ICompanyObject) => {\n      setCompany(selectedCompany);\n      console.log(`selected: ${selectedCompany}`);\n      console.log(`company: ${company}`);\n    },\n    [company],\n  );\n\n  return (\n    <Context.Provider\n      value={{\n        nome: company.nome,\n        cnpj: company.cnpj,\n        logradouro: company.logradouro,\n        municipio: company.municipio,\n        coordinate: company.coordinates,\n        setSelectedCompany,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { ICompanyObject } from '../../utils/interfacesData';\nimport './styles.scss';\nimport { Context } from '../../context/Context';\n\ninterface IPropsObject {\n  company: ICompanyObject;\n}\n\nconst Card: React.FC<IPropsObject> = ({ company, children }) => {\n  const { setSelectedCompany } = useContext(Context);\n  const history = useHistory();\n\n  const selectCompany = useCallback(async () => {\n    await setSelectedCompany(company);\n    history.push('/localization');\n  }, [company, history, setSelectedCompany]);\n\n  return (\n    <button\n      type=\"button\"\n      className=\"card-main-content\"\n      onClick={() => selectCompany()}\n      data-testid=\"card-button\"\n    >\n      <h3>{company.nome}</h3>\n      <span>Razão social</span>\n\n      <h3>{company.cnpj}</h3>\n      <span>CNPJ</span>\n\n      <h3>{`${company.logradouro} ${company.numero} ${company.bairro} ${company.municipio}`}</h3>\n      <span>Endereço</span>\n    </button>\n  );\n};\n\nexport default Card;\n","export default __webpack_public_path__ + \"static/media/people_search.ce1d1120.svg\";","import React, { useCallback, useEffect, useState } from 'react';\nimport { FaBuilding } from 'react-icons/fa';\nimport 'react-multi-carousel/lib/styles.css';\nimport Carousel from 'react-multi-carousel';\n\nimport './styles.scss';\nimport { receitaWsApi, googleGeocodeApi } from '../../services/api';\nimport { validateCnpj } from '../../utils/validateCnpj';\nimport Card from '../../components/Card';\nimport peopleSearch from '../../assets/people_search.svg';\nimport { ICompanyObject } from '../../utils/interfacesData';\n\nconst Home: React.FC = () => {\n  const [cnpjValue, setCnpjValue] = useState('');\n  const [cnpjValidationError, setCnpjValidationError] = useState('');\n  const [companies, setCompanies] = useState<ICompanyObject[]>(\n    [] as ICompanyObject[],\n  );\n  const companiesList = localStorage.getItem('@LocalizadorEmpresas:empresas');\n\n  useEffect(() => {\n    if (companiesList) {\n      const listOfCompanies = JSON.parse(companiesList) as ICompanyObject[];\n\n      if (listOfCompanies) {\n        setCompanies(listOfCompanies);\n      }\n    }\n  }, [companiesList]);\n\n  const setCompanyLocalStorage = useCallback(\n    async (newCompany: ICompanyObject) => {\n      if (\n        companies &&\n        companies.find(companyObject => companyObject.cnpj === newCompany.cnpj)\n      ) {\n        return;\n      }\n      const { data: responseGeocode } = await googleGeocodeApi.get(``, {\n        params: {\n          address: `${newCompany.logradouro} ${newCompany.numero} ${newCompany.bairro} ${newCompany.municipio} - ${newCompany.uf} ${newCompany.cep}`,\n        },\n      });\n\n      if (responseGeocode) {\n        const companyObject = {\n          cnpj: newCompany.cnpj,\n          nome: newCompany.nome,\n          cep: newCompany.cep,\n          bairro: newCompany.bairro,\n          logradouro: newCompany.logradouro,\n          municipio: newCompany.municipio,\n          numero: newCompany.numero,\n          uf: newCompany.uf,\n          coordinates: responseGeocode.results[0].geometry.location,\n        } as ICompanyObject;\n\n        localStorage.setItem(\n          '@LocalizadorEmpresas:empresas',\n          JSON.stringify([...companies, companyObject]),\n        );\n        setCompanies([...companies, companyObject]);\n      }\n    },\n    [companies],\n  );\n\n  const handleSearchCompany = useCallback(async () => {\n    setCnpjValidationError('');\n    try {\n      await validateCnpj(cnpjValue);\n\n      const { data: responseCompany } = await receitaWsApi.get(\n        `cnpj/${cnpjValue}`,\n      );\n\n      await setCompanyLocalStorage(responseCompany);\n    } catch (err) {\n      setCnpjValidationError(err.message);\n    }\n  }, [cnpjValue, setCompanyLocalStorage]);\n\n  return (\n    <>\n      <div className=\"main-content\">\n        <div className=\"header-main-content\">\n          <div className=\"title-content\">\n            <span>\n              <FaBuilding />\n              Localizador de empresas\n            </span>\n          </div>\n          <div className=\"search-content\">\n            <div className=\"input-content\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"CNPJ...\"\n                value={cnpjValue}\n                onChange={(e: React.FormEvent<HTMLInputElement>) => {\n                  setCnpjValue(e.currentTarget.value);\n                  setCnpjValidationError('');\n                }}\n                maxLength={14}\n              />\n              {cnpjValidationError && <span>{cnpjValidationError}</span>}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={handleSearchCompany}\n            >\n              LOCALIZAR\n            </button>\n          </div>\n        </div>\n        <div className=\"list-main-content\">\n          {companies && companies.length ? (\n            <Carousel\n              additionalTransfrom={0}\n              arrows\n              autoPlaySpeed={3000}\n              centerMode={false}\n              className=\"\"\n              containerClass=\"container\"\n              dotListClass=\"\"\n              draggable={false}\n              focusOnSelect={false}\n              infinite\n              itemClass=\"\"\n              keyBoardControl\n              minimumTouchDrag={80}\n              renderButtonGroupOutside={false}\n              renderDotsOutside={false}\n              responsive={{\n                desktop: {\n                  breakpoint: {\n                    max: 3000,\n                    min: 1024,\n                  },\n                  items: 3,\n                  partialVisibilityGutter: 40,\n                },\n                mobile: {\n                  breakpoint: {\n                    max: 464,\n                    min: 0,\n                  },\n                  items: 1,\n                  partialVisibilityGutter: 30,\n                },\n                tablet: {\n                  breakpoint: {\n                    max: 1200,\n                    min: 464,\n                  },\n                  items: 2,\n                  partialVisibilityGutter: 30,\n                },\n              }}\n              showDots={false}\n              sliderClass=\"\"\n              slidesToSlide={1}\n              swipeable\n            >\n              {companies.map(companyDetails => (\n                <Card key={companyDetails.cnpj} company={companyDetails} />\n              ))}\n            </Carousel>\n          ) : (\n            <>\n              <img src={peopleSearch} alt=\"peopleSearch\" />\n              <span>Localize acima a primeira empresa</span>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\n\nimport './styles.scss';\nimport { ICoordinates } from '../../utils/interfacesData';\n\nconst Map: React.FC<ICoordinates> = ({ lat, lng }: ICoordinates) => {\n  useEffect(() => {\n    const coodinates = new google.maps.LatLng(lat, lng);\n\n    const map = new google.maps.Map(\n      document.getElementById('map') as HTMLElement,\n      {\n        zoom: 18,\n        center: coodinates,\n      },\n    );\n\n    new google.maps.Marker({\n      position: coodinates,\n      map,\n    });\n  }, [lat, lng]);\n\n  return <div id=\"map\" />;\n};\n\nexport default Map;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaArrowCircleLeft } from 'react-icons/fa';\n\nimport './styles.scss';\n\ninterface IMapCardProps {\n  nome: string;\n  cnpj: string;\n  logradouro: string;\n  municipio: string;\n}\n\nconst MapCard: React.FC<IMapCardProps> = ({\n  nome,\n  cnpj,\n  logradouro,\n  municipio,\n}: IMapCardProps) => {\n  return (\n    <div className=\"map-card-main-content\">\n      <Link to=\"/\">\n        <FaArrowCircleLeft />\n      </Link>\n\n      <h3>{nome}</h3>\n      <span>Razão social</span>\n\n      <h3>{cnpj}</h3>\n      <span>CNPJ</span>\n\n      <h3>{`${logradouro} ${municipio}`}</h3>\n      <span>Endereço</span>\n    </div>\n  );\n};\n\nexport default MapCard;\n","import React, { useContext, useEffect } from 'react';\n\nimport Map from '../../components/Map';\nimport MapCard from '../../components/MapCard';\nimport { Context } from '../../context/Context';\n\nconst MapLocation: React.FC = () => {\n  const { coordinate, nome, cnpj, logradouro, municipio } = useContext(Context);\n\n  return (\n    <div className=\"map-location-main\">\n      <Map lat={coordinate.lat} lng={coordinate.lng} />\n      <MapCard\n        nome={nome}\n        cnpj={cnpj}\n        logradouro={logradouro}\n        municipio={municipio}\n      />\n    </div>\n  );\n};\n\nexport default MapLocation;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from '../pages/Home';\nimport MapLocation from '../pages/MapLocation';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Home} />\n    <Route path=\"/localization\" component={MapLocation} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Routes from './routes';\n\nimport { ContextProvider } from './context/Context';\n\nconst App: React.FC = () => (\n  <ContextProvider>\n    <Router basename=\"/localizador-de-empresas\">\n      <Routes />\n    </Router>\n  </ContextProvider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './styles/global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}